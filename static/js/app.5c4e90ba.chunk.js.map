{"version":3,"sources":["components/Layout.js","api.js","components/TaskItem.js","components/TasksList.js","screens/HomeScreen.js","screens/TaskFormScreen.js","App.js"],"names":["styles","StyleSheet","create","container","paddingTop","backgroundColor","flex","alignItems","title","color","fontSize","textAlign","marginTop","Layout","children","View","style","StatusBar","API","deleteTask","id","a","async","fetch","method","getTasks","res","json","saveTask","newTask","headers","Accept","body","JSON","stringify","getTask","taskId","updateTask","itemContainer","padding","marginVertical","flexDirection","justifyContent","borderRadius","itemTitle","TaskItem","task","handleDelete","navigation","useNavigation","TouchableOpacity","onPress","navigate","Text","description","TasksList","useState","tasks","setTasks","React","refreshing","setRefreshing","isFocused","useIsFocused","getUsers","console","log","onRefresh","useCallback","Alert","alert","text","useEffect","SafeAreaView","width","FlatList","data","renderItem","item","keyExtractor","toString","refreshControl","RefreshControl","colors","progressBackgroundColor","HomeScreen","input","marginBottom","borderWidth","borderColor","height","buttonSave","paddingBottom","buttonUpdate","buttonText","TaskFormScreen","route","setTask","editing","setEditing","params","setOptions","headerTitle","handleSubmit","handleChange","name","value","TextInput","placeholder","placeholderTextColor","onChangeText","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","component","options","headerStyle","headerTitleStyle","headerRight","marginRight","headerTintColor"],"mappings":"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","file":"static/js/app.5c4e90ba.chunk.js","sourcesContent":["import React from \"react\";\nimport { View, StatusBar, StyleSheet } from \"react-native\";\n\nconst Layout = ({ children }) => {\n  return (\n    <View style={styles.container}>\n      <StatusBar backgroundColor=\"#222f3e\" />\n      {children}\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 5,\n    backgroundColor: \"#222f3e\",\n    flex: 1,\n    alignItems: \"center\",\n  },\n  title: {\n    color: \"#ffffff\",\n    fontSize: 20,\n    textAlign: \"center\",\n    marginTop: 10,\n  },\n});\n\nexport default Layout;\n","const API = \"https://edictus.herokuapp.com/tasks\";\n\nexport const deleteTask = async (id) => {\n  await fetch(`${API}/${id}`, {\n    method: \"DELETE\",\n  });\n};\n\nexport const getTasks = async () => {\n  const res = await fetch(API, {\n    method: \"GET\",\n  });\n\n  return await res.json();\n};\n\nexport const saveTask = async (newTask) => {\n  const res = await fetch(API, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newTask),\n  });\n  return await res.json();\n};\n\nexport const getTask = async (taskId) => {\n  const res = await fetch(`${API}/${taskId}`);\n  return await res.json();\n};\n\nexport const updateTask = async (taskId, newTask) => {\n  // console.log(taskId, newTask)\n  const res = await fetch(`${API}/${taskId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newTask),\n  });\n  return res;\n};\n","import React from \"react\";\nimport { TouchableOpacity, View, Text, StyleSheet } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst TaskItem = ({ task, handleDelete }) => {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.itemContainer}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"TaskFormScreen\", { id: task.id })}\n      >\n        <Text style={styles.itemTitle}>{task.title}</Text>\n        <Text style={{ color: \"#8395a7\" }}>{task.description}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={{ backgroundColor: \"#ee5253\", padding: 7, borderRadius: 5 }}\n        onPress={() => handleDelete(task.id)}\n      >\n        <Text style={{ color: \"#fff\" }}>Delete</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  itemContainer: {\n    backgroundColor: \"#333333\",\n    padding: 20,\n    marginVertical: 8,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 5,\n  },\n  itemTitle: {\n    color: \"#ffffff\",\n  },\n});\nexport default TaskItem;\n","import React, { useEffect, useState } from \"react\";\nimport { FlatList, SafeAreaView, Alert, RefreshControl } from \"react-native\";\nimport { useIsFocused } from \"@react-navigation/native\";\n\nimport { deleteTask, getTasks } from \"../api\";\nimport TaskItem from \"./TaskItem\";\n\nconst TasksList = ({ navigation }) => {\n  const [tasks, setTasks] = useState([]);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  const getUsers = async () => {\n    try {\n      const tasks = await getTasks();\n      setTasks(tasks);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onRefresh = React.useCallback(async () => {\n    setRefreshing(true);\n    //wait(2000).then(() => setRefreshing(false));\n    await getUsers();\n    setRefreshing(false);\n  }, []);\n\n  const handleDelete = (id) => {\n    Alert.alert(\"Delete Task\", \"Are you sure you want to delete the task\", [\n      {\n        text: \"Cancel\",\n        style: \"cancel\",\n      },\n      {\n        text: \"Ok\",\n        onPress: async () => {\n          await deleteTask(id);\n          await getUsers();\n        },\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    getUsers();\n    // console.log(\"called\");\n  }, [isFocused]);\n\n  const renderItem = ({ item }) => (\n    <TaskItem task={item} handleDelete={handleDelete} />\n  );\n\n  return (\n    <SafeAreaView style={{ flex: 1, width: \"90%\" }}>\n      <FlatList\n        data={tasks}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id.toString()}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            colors={[\"#78e08f\"]}\n            progressBackgroundColor=\"#0a3d62\"\n          />\n        }\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default TasksList;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nimport TaskList from \"../components/TasksList\";\n\nconst HomeScreen = () => {\n  return (\n    <Layout>\n      <TaskList />\n    </Layout>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { TextInput, TouchableOpacity, Text, StyleSheet } from \"react-native\";\nimport { saveTask, getTask, updateTask } from \"../api\";\nimport Layout from \"../components/Layout\";\n\nconst TaskFormScreen = ({ navigation, route }) => {\n  const [task, setTask] = useState({\n    title: \"\",\n    description: \"\",\n  });\n  const [editing, setEditing] = useState(false);\n\n  // if (route && route.params) {\n  //   navigation.setOptions({ headerTitle: \"Updating Task\" });\n  // }\n\n  useEffect(() => {\n    if (route.params && route.params.id) {\n      setEditing(true);\n      navigation.setOptions({ headerTitle: \"Updating Task\" });\n      (async () => {\n        const task = await getTask(route.params.id);\n        setTask({ title: task.title, description: task.description });\n      })();\n    }\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      if (!editing) {\n        await saveTask(task);\n      } else {\n        //console.log(route.params.id, task)\n        await updateTask(route.params.id, {...task});\n      }\n      navigation.navigate(\"HomeScreen\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (name, value) => setTask({ ...task, [name]: value });\n\n  return (\n    <Layout>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Write a Title\"\n        placeholderTextColor=\"#576574\"\n        value={task.title}\n        onChangeText={(text) => handleChange(\"title\", text)}\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Write a short Description\"\n        placeholderTextColor=\"#576574\"\n        value={task.description}\n        onChangeText={(text) => handleChange(\"description\", text)}\n      />\n\n      {!editing ? (\n        <TouchableOpacity style={styles.buttonSave} onPress={handleSubmit}>\n          <Text style={styles.buttonText}>Save Task</Text>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity style={styles.buttonUpdate} onPress={handleSubmit}>\n          <Text style={styles.buttonText}>Update Task</Text>\n        </TouchableOpacity>\n      )}\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    width: \"90%\",\n    marginBottom: 7,\n    fontSize: 14,\n    borderWidth: 1,\n    borderColor: \"#10ac84\",\n    height: 30,\n    color: \"#ffffff\",\n    textAlign: \"center\",\n    padding: 4,\n    borderRadius: 5,\n  },\n  buttonSave: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    borderRadius: 5,\n    marginBottom: 3,\n    backgroundColor: \"#10ac84\",\n    width: \"90%\",\n  },\n  buttonUpdate: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    borderRadius: 5,\n    marginBottom: 3,\n    backgroundColor: \"#e58e26\",\n    width: \"90%\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n  },\n});\n\nexport default TaskFormScreen;\n","import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\n\nimport HomeScreen from \"./screens/HomeScreen\";\nimport TaskFormScreen from \"./screens/TaskFormScreen\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"HomeScreen\">\n        <Stack.Screen\n          name=\"HomeScreen\"\n          component={HomeScreen}\n          options={({ navigation }) => ({\n            title: \"DDTI Tasks by R. Avendaño\",\n            headerStyle: {\n              backgroundColor: \"#222f3e\",\n            },\n            headerTitleStyle: {\n              color: \"#ffffff\",\n            },\n            headerRight: () => (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"TaskFormScreen\")}\n              >\n                <Text style={{ color: \"#fff\", marginRight: 20, fontSize: 15 }}>\n                  New\n                </Text>\n              </TouchableOpacity>\n            ),\n          })}\n        />\n        <Stack.Screen\n          name=\"TaskFormScreen\"\n          component={TaskFormScreen}\n          options={{\n            title: 'Create a Task',\n            headerStyle: {\n              backgroundColor: \"#222f3e\",\n            },\n            headerTintColor: \"#fff\",\n\n            headerTitleStyle: {\n              color: \"#ffffff\",\n            },\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}