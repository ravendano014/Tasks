{"version":3,"sources":["components/Layout.js","api.js","components/TaskItem.js","components/TasksList.js","screens/HomeScreen.js","screens/TaskFormScreen.js","components/TaskHistItem.js","components/TasksHistList.js","screens/TaskHistScreen.js","screens/TaskGraphScreen.js","App.js","assets/logo.png"],"names":["styles","StyleSheet","create","container","paddingTop","backgroundColor","flex","alignItems","textAlign","title","color","fontSize","marginTop","tinyLogo","width","height","Layout","children","View","style","Image","source","require","StatusBar","API","deleteTask","id","a","async","fetch","method","getTasks","res","json","getTasksHist","saveTask","newTask","headers","Accept","body","JSON","stringify","getTask","taskId","updateTask","itemContainer","padding","paddingRight","paddingLeft","marginVertical","flexDirection","justifyContent","borderRadius","itemTitle","TaskItem","task","handleDelete","navigation","useNavigation","TouchableOpacity","onPress","Text","navigate","description","code","advance","sysdate","TasksList","useState","tasks","setTasks","React","refreshing","setRefreshing","isFocused","useIsFocused","getUsers","console","log","onRefresh","useCallback","Alert","alert","text","useEffect","SafeAreaView","FlatList","data","renderItem","item","keyExtractor","toString","refreshControl","RefreshControl","colors","progressBackgroundColor","HomeScreen","input","marginBottom","borderWidth","borderColor","multilineinput","buttonSave","paddingBottom","buttonUpdate","buttonText","TaskFormScreen","route","setTask","editing","setEditing","params","setOptions","headerTitle","handleSubmit","handleChange","name","value","TextInput","placeholder","placeholderTextColor","multiline","onChangeText","progress","TaskHistList","TaskHistScreen","TaskGraphScreen","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","component","options","headerStyle","headerTitleStyle","headerLeft","marginRight","headerRight","headerTintColor","module","exports"],"mappings":"0KAeMA,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,WAAY,EACZC,gBAAiB,UACjBC,KAAM,EACNC,WAAY,SACZC,UAAW,QAEbC,MAAO,CACLC,MAAO,UACPC,SAAU,GACVH,UAAW,OACXI,UAAW,IAEbC,SAAU,CACRC,MAAO,IACPC,OAAQ,OAIGC,EAhCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAOnB,EAAOG,WAClB,kBAACiB,EAAA,EAAD,CACED,MAAOnB,EAAOa,SACdQ,OAAQC,EAAQ,OAElB,kBAACC,EAAA,EAAD,CAAWlB,gBAAgB,YAC1BY,I,yECXDO,EAAM,sCAGCC,EAAa,SAAOC,GAAP,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAClBE,MAASL,EAAJ,IAAWE,EAAM,CAC1BI,OAAQ,YAFc,6DAMbC,EAAW,0BAAAJ,EAAAC,OAAA,kEAAAD,EAAA,MACJE,MAAML,EAAK,CAC3BM,OAAQ,SAFY,cAChBE,EADgB,kBAAAL,EAAA,MAKTK,EAAIC,QALK,qGAQXC,EAAe,0BAAAP,EAAAC,OAAA,kEAAAD,EAAA,MACRE,MAjBJ,0CAiBmB,CAC/BC,OAAQ,SAFgB,cACpBE,EADoB,kBAAAL,EAAA,MAKbK,EAAIC,QALS,qGAQfE,EAAW,SAAOC,GAAP,eAAAT,EAAAC,OAAA,kEAAAD,EAAA,MACJE,MAAML,EAAK,CAC3BM,OAAQ,OACRO,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,MAPD,cAChBJ,EADgB,kBAAAL,EAAA,MASTK,EAAIC,QATK,qGAYXS,EAAU,SAAOC,GAAP,eAAAhB,EAAAC,OAAA,kEAAAD,EAAA,MACHE,MAASL,EAAJ,IAAWmB,IADb,cACfX,EADe,kBAAAL,EAAA,MAERK,EAAIC,QAFI,qGAKVW,EAAa,SAAOD,EAAQP,GAAf,eAAAT,EAAAC,OAAA,kEAAAD,EAAA,MAENE,MAASL,EAAJ,IAAWmB,EAAU,CAC1Cb,OAAQ,MACRO,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,MARC,cAElBJ,EAFkB,yBAUjBA,GAViB,6DCZpBhC,EAASC,IAAWC,OAAO,CAC/B2C,cAAe,CACbxC,gBAAiB,UACjByC,QAAS,GACTC,aAAc,EACdC,YAAa,EACbC,eAAgB,EAChBC,cAAe,MACfC,eAAgB,gBAChB5C,WAAY,SACZC,UAAW,OACX4C,aAAc,GAEhBC,UAAW,CACT3C,MAAO,UACPqC,aAAc,EACdC,YAAa,EACbxC,UAAW,UAGA8C,EA9CE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAClBC,EAAaC,0BAEnB,OACE,kBAACxC,EAAA,EAAD,CAAMC,MAAOnB,EAAO6C,eAClB,kBAACc,EAAA,EAAD,CACIxC,MAAO,CAAEd,gBAAiB,UAAWyC,QAAS,EAAGM,aAAc,GAC/DQ,QAAS,kBAAMJ,EAAaD,EAAK7B,MAEjC,kBAACmC,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,SAAtB,aAEJ,kBAACiD,EAAA,EAAD,CACEC,QAAS,kBAAMH,EAAWK,SAAS,iBAAkB,CAAEpC,GAAI6B,EAAK7B,OAEhE,kBAACmC,EAAA,EAAD,CAAM1C,MAAOnB,EAAOqD,WAAYE,EAAK9C,OACrC,kBAACoD,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKQ,aAC5E,kBAACF,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKS,MAC5E,kBAACH,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKU,SAC5E,kBAACJ,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKW,YCkDrEC,EAjEG,SAAC,GAAmB,EAAjBV,WAAkB,IACrC,EAA0BW,mBAAS,IAAnC,WAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCC,IAAMH,UAAS,GAAnD,WAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAYC,yBAEZC,EAAW,0BAAAjD,EAAAC,OAAA,2EAAAD,EAAA,MAEOI,KAFP,OAEPsC,EAFO,OAGbC,EAASD,GAHI,gDAKbQ,QAAQC,IAAR,MALa,iEASXC,EAAYR,IAAMS,aAAY,oBAAArD,EAAAC,OAAA,uDAClC6C,GAAc,GADoB,WAAA9C,EAAA,MAG5BiD,KAH4B,OAIlCH,GAAc,GAJoB,8DAKjC,IAEGjB,EAAe,SAAC9B,GACpBuD,IAAMC,MAAM,WAAY,yBAA0B,CAChD,CACEC,KAAM,WACNhE,MAAO,UAET,CACEgE,KAAM,KACNvB,QAAS,oBAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MACDF,EAAWC,IADV,yBAAAC,EAAA,MAEDiD,KAFC,iEAQfQ,qBAAU,WACRR,MAEC,CAACF,IAMJ,OACE,kBAACW,EAAA,EAAD,CAAclE,MAAO,CAAEb,KAAM,EAAGQ,MAAO,QACrC,kBAACwE,EAAA,EAAD,CACEC,KAAMlB,EACNmB,WARa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,kBAAC,EAAD,CAAUlC,KAAMkC,EAAMjC,aAAcA,KAQhCkC,aAAc,SAACD,GAAD,OAAUA,EAAK/D,GAAGiE,YAChCC,eACE,kBAACC,EAAA,EAAD,CACErB,WAAYA,EACZO,UAAWA,EACXe,OAAQ,CAAC,WACTC,wBAAwB,gBCnDrBC,EARI,WACjB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,Q,ylBCHN,IAwFMhG,EAASC,IAAWC,OAAO,CAC/B+F,MAAO,CACLnF,MAAO,MACPoF,aAAc,EACdvF,SAAU,GACVwF,YAAa,EACbC,YAAa,UACbrF,OAAQ,GACRL,MAAO,UACPF,UAAW,SACXsC,QAAS,EACTM,aAAc,GAEhBiD,eAAgB,CACdvF,MAAO,MACPoF,aAAc,EACdvF,SAAU,GACVwF,YAAa,EACbC,YAAa,UACbrF,OAAQ,GACRL,MAAO,UACPoC,QAAS,EACTM,aAAc,GAEhBkD,WAAY,CACVlG,WAAY,GACZmG,cAAe,GACfnD,aAAc,EACd8C,aAAc,EACd7F,gBAAiB,UACjBS,MAAO,OAET0F,aAAc,CACZpG,WAAY,GACZmG,cAAe,GACfnD,aAAc,EACd8C,aAAc,EACd7F,gBAAiB,UACjBS,MAAO,OAET2F,WAAY,CACV/F,MAAO,OACPF,UAAW,YAIAkG,EAtIQ,SAAC,GAA2B,IAAzBjD,EAAwB,EAAxBA,WAAYkD,EAAY,EAAZA,MACpC,EAAwBvC,mBAAS,CAC/B3D,MAAO,GACPsD,YAAa,GACbC,KAAM,GACNC,QAAS,IAJX,WAAOV,EAAP,KAAaqD,EAAb,KAMA,EAA8BxC,oBAAS,GAAvC,WAAOyC,EAAP,KAAgBC,EAAhB,KAMA1B,qBAAU,WACJuB,EAAMI,QAAUJ,EAAMI,OAAOrF,KAC/BoF,GAAW,GACXrD,EAAWuD,WAAW,CAAEC,YAAa,qBACrC,WAAC,QAAAtF,EAAAC,OAAA,kEAAAD,EAAA,MACoBe,EAAQiE,EAAMI,OAAOrF,KADzC,OACO6B,EADP,OAECqD,EAAQ,CAAEnG,MAAO8C,EAAK9C,MAAOsD,YAAaR,EAAKQ,YAAaC,KAAMT,EAAKS,KAAMC,QAASV,EAAKU,UAF5F,4DAAD,MAKD,IAEH,IAAMiD,EAAe,oBAAAvF,EAAAC,OAAA,4DAEZiF,EAFY,kCAAAlF,EAAA,MAGTQ,EAASoB,IAHA,+CAAA5B,EAAA,MAMTiB,EAAW+D,EAAMI,OAAOrF,GAAd,KAAsB6B,KANvB,OAQjBE,EAAWK,SAAS,cARH,kDAUjBe,QAAQC,IAAR,MAViB,kEAcfqC,EAAe,SAACC,EAAMC,GAAP,OAAiBT,EAAQ,EAAD,KAAMrD,GAAN,UAAa6D,EAAOC,MAEjE,OACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnG,MAAOnB,EAAOiG,MACdsB,YAAY,gBACZC,qBAAqB,UACrBH,MAAO9D,EAAK9C,MACZgH,WAAW,EACXC,aAAc,SAACvC,GAAD,OAAUgC,EAAa,QAAShC,MAGhD,kBAACmC,EAAA,EAAD,CACEnG,MAAOnB,EAAOqG,eACdkB,YAAY,UACZC,qBAAqB,UACrBH,MAAO9D,EAAKQ,YACZ0D,WAAW,EACXC,aAAc,SAACvC,GAAD,OAAUgC,EAAa,cAAehC,MAGtD,kBAACmC,EAAA,EAAD,CACEnG,MAAOnB,EAAOiG,MACdsB,YAAY,WACZC,qBAAqB,UACrBH,MAAO9D,EAAKS,KACZ0D,aAAc,SAACvC,GAAD,OAAUgC,EAAa,OAAQhC,MAE/C,kBAACmC,EAAA,EAAD,CACEnG,MAAOnB,EAAOiG,MACdsB,YAAY,SACZC,qBAAqB,UACrBH,MAAO9D,EAAKU,QAAQJ,KACpB6D,aAAc,SAACvC,GAAD,OAAUgC,EAAa,UAAWhC,MAGhD0B,EAKA,kBAAClD,EAAA,EAAD,CAAkBxC,MAAOnB,EAAOwG,aAAc5C,QAASsD,GACrD,kBAACrD,EAAA,EAAD,CAAM1C,MAAOnB,EAAOyG,YAApB,eALF,kBAAC9C,EAAA,EAAD,CAAkBxC,MAAOnB,EAAOsG,WAAY1C,QAASsD,GACnD,kBAACrD,EAAA,EAAD,CAAM1C,MAAOnB,EAAOyG,YAApB,oB,SC1DJzG,EAASC,IAAWC,OAAO,CAC/B2C,cAAe,CACbxC,gBAAiB,UACjByC,QAAS,GACTC,aAAc,EACdC,YAAa,EACbC,eAAgB,EAChBC,cAAe,MACfC,eAAgB,gBAChB5C,WAAY,SACZC,UAAW,OACX4C,aAAc,GAEhBC,UAAW,CACT3C,MAAO,UACPqC,aAAc,EACdC,YAAa,EACbxC,UAAW,UAGA8C,EAvCE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAyB,EAAnBC,aACLE,0BAEnB,OACE,kBAACxC,EAAA,EAAD,CAAMC,MAAOnB,EAAO6C,eAClB,kBAACc,EAAA,EAAD,KAEE,kBAACE,EAAA,EAAD,CAAM1C,MAAOnB,EAAOqD,WAAYE,EAAK9C,OACrC,kBAACoD,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKQ,aAC5E,kBAACF,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKS,MAC5E,kBAACH,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKU,SAC5E,kBAAC,IAAD,CAAc0D,SAAWpE,EAAKU,QAAQ,IAAMnD,MAAO,MACnD,kBAAC+C,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,UAAWsC,YAAa,EAAGxC,UAAW,SAAW+C,EAAKW,YCuDrE0D,EAjEM,SAAC,GAAmB,EAAjBnE,WAAkB,IACxC,EAA0BW,mBAAS,IAAnC,WAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCC,IAAMH,UAAS,GAAnD,WAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAYC,yBAEZC,EAAW,0BAAAjD,EAAAC,OAAA,2EAAAD,EAAA,MAEOO,KAFP,OAEPmC,EAFO,OAGbC,EAASD,GAHI,gDAKbQ,QAAQC,IAAR,MALa,iEASXC,EAAYR,IAAMS,aAAY,oBAAArD,EAAAC,OAAA,uDAClC6C,GAAc,GADoB,WAAA9C,EAAA,MAG5BiD,KAH4B,OAIlCH,GAAc,GAJoB,8DAKjC,IAEGjB,EAAe,SAAC9B,GACpBuD,IAAMC,MAAM,WAAY,yBAA0B,CAChD,CACEC,KAAM,WACNhE,MAAO,UAET,CACEgE,KAAM,KACNvB,QAAS,oBAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MACDF,EAAWC,IADV,yBAAAC,EAAA,MAEDiD,KAFC,iEAQfQ,qBAAU,WACRR,MAEC,CAACF,IAMJ,OACE,kBAACW,EAAA,EAAD,CAAclE,MAAO,CAAEb,KAAM,EAAGQ,MAAO,QACrC,kBAACwE,EAAA,EAAD,CACEC,KAAMlB,EACNmB,WARa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,kBAAC,EAAD,CAAUlC,KAAMkC,EAAMjC,aAAcA,KAQhCkC,aAAc,SAACD,GAAD,OAAUA,EAAK/D,GAAGiE,YAChCC,eACE,kBAACC,EAAA,EAAD,CACErB,WAAYA,EACZO,UAAWA,EACXe,OAAQ,CAAC,WACTC,wBAAwB,gBCnDrB8B,EARQ,WACrB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCKSC,EARS,WACtB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCEAC,EAAQC,cAsECC,IApEH,WACV,OACE,kBAACC,EAAA,EAAD,KACE,kBAACH,EAAMI,UAAP,CAAiBC,iBAAiB,cAChC,kBAACL,EAAMM,OAAP,CACEjB,KAAK,aACLkB,UAAWtC,EACXuC,QAAS,gBAAG9E,EAAH,EAAGA,WAAH,MAAqB,CAC5BhD,MAAO,+BACP+H,YAAa,CACXnI,gBAAiB,WAEnBoI,iBAAkB,CAChB/H,MAAO,WAETgI,WAAY,kBACV,kBAAC/E,EAAA,EAAD,CACEC,QAAS,kBAAMH,EAAWK,SAAS,oBAEnC,kBAACD,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,OAAQiI,YAAa,GAAIhI,SAAU,KAAzD,UAKJiI,YAAa,kBACX,kBAACjF,EAAA,EAAD,CACEC,QAAS,kBAAMH,EAAWK,SAAS,oBAEnC,kBAACD,EAAA,EAAD,CAAM1C,MAAO,CAAET,MAAO,OAAQiI,YAAa,GAAIhI,SAAU,KAAzD,eAOR,kBAACoH,EAAMM,OAAP,CACEjB,KAAK,iBACLkB,UAAW5B,EACX6B,QAAS,CACP9H,MAAO,cACP+H,YAAa,CACXnI,gBAAiB,WAEnBwI,gBAAiB,OAEjBJ,iBAAkB,CAChB/H,MAAO,cAIZ,kBAACqH,EAAMM,OAAP,CAAcjB,KAAK,iBAAiBkB,UAAWT,EAAiBU,QAAS,CACtE9H,MAAO,YACP+H,YAAa,CACXnI,gBAAiB,WAEnBwI,gBAAiB,OAEjBJ,iBAAkB,CAChB/H,MAAO,cAGZ,kBAACqH,EAAMM,OAAP,CAAcjB,KAAK,kBAAkBkB,UAAWR,Q,0DCzEzDgB,EAAOC,QAAU,IAA0B,mC","file":"static/js/app.9221f3d6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Image, View, StatusBar, StyleSheet,  TouchableOpacity, Text } from \"react-native\";\n\nconst Layout = ({ children }) => {\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.tinyLogo}\n        source={require('../assets/logo.png')}\n      />\n      <StatusBar backgroundColor=\"#222f3e\" />\n      {children}\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 5,\n    backgroundColor: \"#222f3e\",\n    flex: 1,\n    alignItems: \"center\",\n    textAlign: \"left\"\n  },\n  title: {\n    color: \"#ffffff\",\n    fontSize: 20,\n    textAlign: \"left\",\n    marginTop: 10\n  },\n  tinyLogo: {\n    width: 100,\n    height: 100,\n  },\n});\n\nexport default Layout;\n","const API = \"https://edictus.herokuapp.com/tasks\";\nconst APIHist = \"https://edictus.herokuapp.com/taskshist\";\n\nexport const deleteTask = async (id) => {\n  await fetch(`${API}/${id}`, {\n    method: \"DELETE\",\n  });\n};\n\nexport const getTasks = async () => {\n  const res = await fetch(API, {\n    method: \"GET\",\n  });\n\n  return await res.json();\n};\n\nexport const getTasksHist = async () => {\n  const res = await fetch(APIHist, {\n    method: \"GET\",\n  });\n\n  return await res.json();\n};\n\nexport const saveTask = async (newTask) => {\n  const res = await fetch(API, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newTask),\n  });\n  return await res.json();\n};\n\nexport const getTask = async (taskId) => {\n  const res = await fetch(`${API}/${taskId}`);\n  return await res.json();\n};\n\nexport const updateTask = async (taskId, newTask) => {\n  // console.log(taskId, newTask)\n  const res = await fetch(`${API}/${taskId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newTask),\n  });\n  return res;\n};\n","import React from \"react\";\nimport { Image, TouchableOpacity, View, Text, StyleSheet } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst TaskItem = ({ task, handleDelete }) => {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.itemContainer}>\n      <TouchableOpacity\n          style={{ backgroundColor: \"#ee5253\", padding: 7, borderRadius: 5 }}\n          onPress={() => handleDelete(task.id)}\n        >\n          <Text style={{ color: \"#fff\" }}>Archivar</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"TaskFormScreen\", { id: task.id })}\n      >\n        <Text style={styles.itemTitle}>{task.title}</Text>\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.description}</Text>\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.code}</Text>\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.advance}</Text>\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.sysdate}</Text>\n      \n\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  itemContainer: {\n    backgroundColor: \"#252138\",\n    padding: 15,\n    paddingRight: 5,\n    paddingLeft: 5,\n    marginVertical: 8,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    textAlign: \"left\",\n    borderRadius: 5,\n  },\n  itemTitle: {\n    color: \"#ffffff\",\n    paddingRight: 5,\n    paddingLeft: 5,\n    textAlign: \"left\"\n  }\n});\nexport default TaskItem;\n","import React, { useEffect, useState } from \"react\";\nimport { FlatList, SafeAreaView, Alert, RefreshControl } from \"react-native\";\nimport { useIsFocused } from \"@react-navigation/native\";\n\nimport { deleteTask, getTasks } from \"../api\";\nimport TaskItem from \"./TaskItem\";\n\nconst TasksList = ({ navigation }) => {\n  const [tasks, setTasks] = useState([]);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  const getUsers = async () => {\n    try {\n      const tasks = await getTasks();\n      setTasks(tasks);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onRefresh = React.useCallback(async () => {\n    setRefreshing(true);\n    //wait(2000).then(() => setRefreshing(false));\n    await getUsers();\n    setRefreshing(false);\n  }, []);\n\n  const handleDelete = (id) => {\n    Alert.alert(\"Eliminar\", \"Confirme para eliminar\", [\n      {\n        text: \"Cancelar\",\n        style: \"cancel\",\n      },\n      {\n        text: \"Ok\",\n        onPress: async () => {\n          await deleteTask(id);\n          await getUsers();\n        },\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    getUsers();\n    // console.log(\"called\");\n  }, [isFocused]);\n\n  const renderItem = ({ item }) => (\n    <TaskItem task={item} handleDelete={handleDelete} />\n  );\n\n  return (\n    <SafeAreaView style={{ flex: 1, width: \"90%\" }}>\n      <FlatList\n        data={tasks}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id.toString()}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            colors={[\"#78e08f\"]}\n            progressBackgroundColor=\"#0a3d62\"\n          />\n        }\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default TasksList;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nimport TaskList from \"../components/TasksList\";\n\nconst HomeScreen = () => {\n  return (\n    <Layout>\n      <TaskList />\n    </Layout>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { TextInput, TouchableOpacity, Text, StyleSheet } from \"react-native\";\nimport { saveTask, getTask, updateTask } from \"../api\";\nimport Layout from \"../components/Layout\";\n\nconst TaskFormScreen = ({ navigation, route }) => {\n  const [task, setTask] = useState({\n    title: \"\",\n    description: \"\",\n    code: \"\",\n    advance: 0\n  });\n  const [editing, setEditing] = useState(false);\n\n  // if (route && route.params) {\n  //   navigation.setOptions({ headerTitle: \"Updating Task\" });\n  // }\n\n  useEffect(() => {\n    if (route.params && route.params.id) {\n      setEditing(true);\n      navigation.setOptions({ headerTitle: \"Actualizar Tarea\" });\n      (async () => {\n        const task = await getTask(route.params.id);\n        setTask({ title: task.title, description: task.description, code: task.code, advance: task.advance });\n      })();\n    }\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      if (!editing) {\n        await saveTask(task);\n      } else {\n        //console.log(route.params.id, task)\n        await updateTask(route.params.id, {...task});\n      }\n      navigation.navigate(\"HomeScreen\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (name, value) => setTask({ ...task, [name]: value });\n\n  return (\n    <Layout>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Requerimiento\"\n        placeholderTextColor=\"#576574\"\n        value={task.title}\n        multiline={true}\n        onChangeText={(text) => handleChange(\"title\", text)}\n      />\n\n      <TextInput\n        style={styles.multilineinput}\n        placeholder=\"Detalle\"\n        placeholderTextColor=\"#576574\"\n        value={task.description}\n        multiline={true}\n        onChangeText={(text) => handleChange(\"description\", text)}\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Asignado\"\n        placeholderTextColor=\"#576574\"\n        value={task.code}\n        onChangeText={(text) => handleChange(\"code\", text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Avance\"\n        placeholderTextColor=\"#576574\"\n        value={task.advance.Text}\n        onChangeText={(text) => handleChange(\"advance\", text)}\n      />\n\n      {!editing ? (\n        <TouchableOpacity style={styles.buttonSave} onPress={handleSubmit}>\n          <Text style={styles.buttonText}>Guardar Tarea</Text>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity style={styles.buttonUpdate} onPress={handleSubmit}>\n          <Text style={styles.buttonText}>Actualizar</Text>\n        </TouchableOpacity>\n      )}\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    width: \"90%\",\n    marginBottom: 7,\n    fontSize: 14,\n    borderWidth: 1,\n    borderColor: \"#252138\",\n    height: 30,\n    color: \"#ffffff\",\n    textAlign: \"center\",\n    padding: 4,\n    borderRadius: 5,\n  },\n  multilineinput: {\n    width: \"90%\",\n    marginBottom: 7,\n    fontSize: 14,\n    borderWidth: 1,\n    borderColor: \"#252138\",\n    height: 80,\n    color: \"#ffffff\",\n    padding: 4,\n    borderRadius: 5,\n  },\n  buttonSave: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    borderRadius: 5,\n    marginBottom: 3,\n    backgroundColor: \"#10ac84\",\n    width: \"90%\",\n  },\n  buttonUpdate: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    borderRadius: 5,\n    marginBottom: 3,\n    backgroundColor: \"#e58e26\",\n    width: \"90%\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n  },\n});\n\nexport default TaskFormScreen;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View, Text, StyleSheet } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Progress from 'react-native-progress';\n\nconst TaskItem = ({ task, handleDelete }) => {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.itemContainer}>\n      <TouchableOpacity\n      >\n        <Text style={styles.itemTitle}>{task.title}</Text>\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.description}</Text>\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.code}</Text>\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.advance}</Text>\n        <Progress.Bar progress={(task.advance/100)} width={200} />\n        <Text style={{ color: \"#8395a7\", paddingLeft: 5, textAlign: \"left\" }}>{task.sysdate}</Text>\n\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  itemContainer: {\n    backgroundColor: \"#252138\",\n    padding: 15,\n    paddingRight: 5,\n    paddingLeft: 5,\n    marginVertical: 8,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    textAlign: \"left\",\n    borderRadius: 5,\n  },\n  itemTitle: {\n    color: \"#ffffff\",\n    paddingRight: 5,\n    paddingLeft: 5,\n    textAlign: \"left\"\n  }\n});\nexport default TaskItem;\n","import React, { useEffect, useState } from \"react\";\nimport { FlatList, SafeAreaView, Alert, RefreshControl } from \"react-native\";\nimport { useIsFocused } from \"@react-navigation/native\";\n\nimport { deleteTask, getTasksHist } from \"../api\";\nimport TaskItem from \"./TaskHistItem\";\n\nconst TaskHistList = ({ navigation }) => {\n  const [tasks, setTasks] = useState([]);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  const getUsers = async () => {\n    try {\n      const tasks = await getTasksHist();\n      setTasks(tasks);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onRefresh = React.useCallback(async () => {\n    setRefreshing(true);\n    //wait(2000).then(() => setRefreshing(false));\n    await getUsers();\n    setRefreshing(false);\n  }, []);\n\n  const handleDelete = (id) => {\n    Alert.alert(\"Eliminar\", \"Confirme para eliminar\", [\n      {\n        text: \"Cancelar\",\n        style: \"cancel\",\n      },\n      {\n        text: \"Ok\",\n        onPress: async () => {\n          await deleteTask(id);\n          await getUsers();\n        },\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    getUsers();\n    // console.log(\"called\");\n  }, [isFocused]);\n\n  const renderItem = ({ item }) => (\n    <TaskItem task={item} handleDelete={handleDelete} />\n  );\n\n  return (\n    <SafeAreaView style={{ flex: 1, width: \"90%\" }}>\n      <FlatList\n        data={tasks}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id.toString()}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            colors={[\"#78e08f\"]}\n            progressBackgroundColor=\"#0a3d62\"\n          />\n        }\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default TaskHistList;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nimport TaskHistList from \"../components/TasksHistList\";\n\nconst TaskHistScreen = () => {\n  return (\n    <Layout>\n      <TaskHistList />\n    </Layout>\n  );\n};\n\nexport default TaskHistScreen;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\n\nimport TaskList from \"../components/TasksList\";\n\nconst TaskGraphScreen = () => {\n  return (\n    <Layout>\n      <TaskList />\n    </Layout>\n  );\n};\n\nexport default TaskGraphScreen;","import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Image, Text, TouchableOpacity, View } from \"react-native\";\n\nimport HomeScreen from \"./screens/HomeScreen\";\nimport TaskFormScreen from \"./screens/TaskFormScreen\";\nimport TaskHistScreen from \"./screens/TaskHistScreen\";\nimport TaskGraphScreen from \"./screens/TaskGraphScreen\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"HomeScreen\">\n        <Stack.Screen\n          name=\"HomeScreen\"\n          component={HomeScreen}\n          options={({ navigation }) => ({\n            title: \"DDTI Tasks by R. Avendaño\",\n            headerStyle: {\n              backgroundColor: \"#252138\",\n            },\n            headerTitleStyle: {\n              color: \"#ffffff\",\n            },\n            headerLeft: () => (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"TaskHistScreen\")}\n              >\n                <Text style={{ color: \"#fff\", marginRight: 20, fontSize: 15 }}>\n                  Hist\n                </Text>\n              </TouchableOpacity>\n            ),\n            headerRight: () => (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"TaskFormScreen\")}\n              >\n                <Text style={{ color: \"#fff\", marginRight: 20, fontSize: 15 }}>\n                  Nueva\n                </Text>\n              </TouchableOpacity>\n            ),\n          })}\n        />\n        <Stack.Screen\n          name=\"TaskFormScreen\"\n          component={TaskFormScreen}\n          options={{\n            title: 'Nueva Tarea',\n            headerStyle: {\n              backgroundColor: \"#252138\",\n            },\n            headerTintColor: \"#fff\",\n\n            headerTitleStyle: {\n              color: \"#ffffff\",\n            },\n          }}\n        />\n         <Stack.Screen name=\"TaskHistScreen\" component={TaskHistScreen}  options={{\n            title: 'Historial',\n            headerStyle: {\n              backgroundColor: \"#252138\",\n            },\n            headerTintColor: \"#fff\",\n\n            headerTitleStyle: {\n              color: \"#ffffff\",\n            },\n          }} />\n         <Stack.Screen name=\"TaskGraphScreen\" component={TaskGraphScreen} />\n      </Stack.Navigator>\n\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/logo.27278825.png\";"],"sourceRoot":""}